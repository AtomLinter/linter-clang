{
  "name": "linter-clang",
  "main": "./lib/main",
  "private": true,
  "version": "4.1.2",
  "description": "Lint C-based files using clang",
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-clang"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.4.0 <2.0.0"
  },
  "configSchema": {
    "executablePath": {
      "type": "string",
      "default": "clang"
    },
    "clangIncludePaths": {
      "type": "array",
      "default": [
        "."
      ]
    },
    "clangSuppressWarnings": {
      "type": "boolean",
      "default": false
    },
    "clangDefaultCFlags": {
      "type": "string",
      "default": "-Wall"
    },
    "clangDefaultCppFlags": {
      "type": "string",
      "default": "-Wall -std=c++11"
    },
    "clangDefaultObjCFlags": {
      "type": "string",
      "default": ""
    },
    "clangDefaultObjCppFlags": {
      "type": "string",
      "default": ""
    },
    "clangErrorLimit": {
      "type": "integer",
      "default": 0
    }
  },
  "scripts": {
    "test": "apm test",
    "lint": "eslint ."
  },
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "dependencies": {
    "atom-linter": "10.0.0",
    "atom-package-deps": "5.0.0",
    "clang-flags": "0.2.2"
  },
  "devDependencies": {
    "eslint": "5.15.1",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-plugin-import": "2.16.0",
    "jasmine-fix": "1.3.1"
  },
  "package-deps": [
    "linter:2.0.0"
  ],
  "renovate": {
    "extends": [
      "config:base"
    ],
    "semanticCommits": true,
    "rangeStrategy": "pin",
    "packageRules": [
      {
        "packagePatterns": [
          "^eslint"
        ],
        "groupName": "ESLint packages"
      }
    ]
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "globals": {
      "atom": true
    },
    "env": {
      "browser": true,
      "node": true
    }
  }
}
